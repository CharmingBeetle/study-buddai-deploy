
services:
  frontend:
    build:
      context: ../Study_BuddAI_FE 
      dockerfile: Dockerfile
    ports:
      - "5173:80"
    
    depends_on:
      backend:
        condition: service_healthy
   
  backend:
    build:
      context: ../Study_BuddAI_BE  
      dockerfile: Dockerfile.prod  
    ports:
      - "8080:8080"
    env_file: 
    - ./.env.docker
    # - ./.env.production  # Include both env files
    # Uncomment if you want to use environment variables directly in the container
    # environment:
    #   - NODE_ENV=production
    #   - MYSQL_HOST=${MYSQL_HOST}
    #   - MYSQL_USER=${MYSQL_USER}
    #   - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    #   - MYSQL_DATABASE=${MYSQL_DATABASE}
    #   - MYSQL_PORT=${MYSQL_PORT}
    #   - GOOGLE_API_KEY=${GOOGLE_API_KEY}
    # volumes:
    #   - ./Study_BuddAI_BE/google-key.json:/Study_BuddAI_BE/google-key.json:ro
    
    depends_on:
      db:
        condition: service_healthy  
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s 

  db:
    image: mysql:8.0
    env_file: .env.docker  # Share the same env file
    volumes:
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-u", "root", "--password=${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 20s
      retries: 10
      start_period: 30s
    # Uncomment if need to connect to DB externally:
  #   ports:  
  #     - "3306:3306"

volumes:
  mysql-data: